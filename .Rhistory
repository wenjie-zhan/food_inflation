ucc_group == "Fresh fruits" ~ "fresh_fruits",
ucc_group == "Fresh vegetables" ~ "fresh_veggies",
ucc_group == "Processed fruits and vegetables" ~ "processed_fv",
ucc_group == "Sugar and sweets" ~ "sugar",
ucc_group == "Fat and oil" ~ "fat",
ucc_group == "Juices and nonalchoholic drinks" ~ "juices",
ucc_group == "Beverage materials including coffee and tea" ~ "coffee_tea",
ucc_group == "Other foods" ~ "other_foods",
ucc_group == "FAFH" ~ "fafh",
ucc_group == "Alcoholic beverages at home" ~ "alc_ah",
ucc_group == "Alcoholic beverages away from home" ~ "alc_afh",
ucc_group =="Nonfood" ~ "nonfood"
)) %>%
select(newid, group_renamed, expnmo_alloc, expnyr_alloc, expn_share) %>%
pivot_wider(
names_from = "group_renamed",
values_from = "expn_share"
) %>%
mutate(across(bakery:alc_ah, replace(is.na(.), 0)))
cu_exp_share <- expd_cu %>%
mutate(group_renamed = case_when(
ucc_group == "Cereals and cecreal products" ~ "cereals",
ucc_group == "Bakery product" ~ "bakery",
ucc_group == "Beef and veal" ~ "beef",
ucc_group == "Pork" ~ "pork",
ucc_group == "Other meats" ~ "other_meats",
ucc_group == "Poultry" ~ "poultry",
ucc_group == "Fish and seafood" ~ "fish",
ucc_group == "Eggs" ~ "eggs",
ucc_group == "Dairy and related products" ~ "dairy",
ucc_group == "Fresh fruits" ~ "fresh_fruits",
ucc_group == "Fresh vegetables" ~ "fresh_veggies",
ucc_group == "Processed fruits and vegetables" ~ "processed_fv",
ucc_group == "Sugar and sweets" ~ "sugar",
ucc_group == "Fat and oil" ~ "fat",
ucc_group == "Juices and nonalchoholic drinks" ~ "juices",
ucc_group == "Beverage materials including coffee and tea" ~ "coffee_tea",
ucc_group == "Other foods" ~ "other_foods",
ucc_group == "FAFH" ~ "fafh",
ucc_group == "Alcoholic beverages at home" ~ "alc_ah",
ucc_group == "Alcoholic beverages away from home" ~ "alc_afh",
ucc_group =="Nonfood" ~ "nonfood"
)) %>%
select(newid, group_renamed, expnmo_alloc, expnyr_alloc, expn_share) %>%
pivot_wider(
names_from = "group_renamed",
values_from = "expn_share"
) %>%
mutate(across(bakery:alc_ah, ~replace(., is.na(.), 0)))
expd_gp <- expd_mg %>%
mutate(
expnmo = expnmo %>% replace(is.na(.), substr(as.character(qredate), 3, 4)) %>% as.numeric(),
expnyr = expnyr %>% replace(is.na(.), substr(as.character(qredate), 7, 10)) %>% as.numeric()
) %>%
filter(!is.na(expnmo) & !is.na(ucc) & pub_flag == 2) %>% # There are hardly any nonfood uccs with pub_flag=1 (not included in published tables)
select(newid, alloc, cost, ucc, quarter, year, expnmo, expnyr) %>%
mutate(
ucc_group = case_when(
ucc %/% 10000 %in% c(1) ~ "Cereals and cecreal products",
ucc %/% 10000 %in% c(2) ~ "Bakery products",
ucc %/% 10000 %in% c(3) ~ "Beef and veal",
ucc %/% 10000 %in% c(4) ~ "Pork",
ucc %/% 10000 %in% c(5) ~ "Other meats",
ucc %/% 10000 %in% c(6) ~ "Poultry",
ucc %/% 10000 %in% c(7) ~ "Fish and seafood",
ucc %/% 10000 %in% c(8) ~ "Eggs",
ucc %/% 10000 %in% c(9:10) ~ "Dairy and related products",
ucc %/% 10000 %in% c(11) ~ "Fresh fruits",
ucc %/% 10000 %in% c(12) ~ "Fresh vegetables",
ucc %/% 10000 %in% c(13:14) ~ "Processed fruits and vegetables",
ucc %/% 10000 %in% c(15) ~ "Sugar and sweets",
ucc %/% 10000 %in% c(16) ~ "Fat and oil",
ucc %in% c(170110, 170210, 170510, 170530:170533) ~ "Juices and nonalchoholic drinks",
ucc %in% c(170310, 170410, 170520) ~ "Beverage materials including coffee and tea",
ucc %/% 10000 %in% c(18) ~ "Other foods",
ucc %/% 10000 %in% c(19) ~ "FAFH",
ucc %in% c(200511:200520) ~ "Alcoholic beverages at home",
ucc %in% c(200521:200536, 740420) ~ "Alcoholic beverages away from home",
TRUE ~ "Nonfood"
)
) %>%
mutate(
product = case_when(
ucc_group %in% c("cereals", "Bakery products") ~ "Cereals and bakery products",
ucc_group %in% c("Beef and veal", "Pork", "Other meats", "Poultry", "Fish and seafood") ~ "Meats",
ucc_group %in% c("Eggs") ~ "Eggs",
ucc_group %in% c("Dairy and related products") ~ "Dairy",
ucc_group %in% c("Fresh fruits", "Fresh vegetables", "Processed fruits and vegetables") ~ "Fruits and vegetables",
ucc_group %in% c("Sugar and sweets", "Fat and oil", "Other foods") ~ "Other foods",
ucc_group %in% c("Juices and nonalchoholic drinks", "Beverage materials including coffee and tea") ~ "Nonalchoholic beverages",
ucc_group %in% c("Alcoholic beverages at home", "Alcoholic beverages away from home") ~ "Alcoholic beverages",
ucc_group %in% c("FAFH") ~ "FAFH",
ucc_group %in% c("Nonfood") ~ "Nonfood"
)
)
### Allocate the proper month to households
# This code assigns household to month based on the month the household purchased the most, if evenly split, then later month (by Abby)
# We need to merge expd file to fmld file to determine the allocated month and year of expenditure because in fmld there are only start month and year of diary
expd_mo <- expd_gp %>%
group_by(newid, expnmo, expnyr) %>%
summarise(cost_tot = sum(cost, na.rm = T))
expd_max <- expd_mo %>%
group_by(newid) %>%
summarise(cost_max = max(cost_tot)) %>%
merge(expd_mo, by = "newid", all.y = T) %>%
filter(cost_tot == cost_max) %>%
slice_max(expnmo, by = "newid") %>%
rename(expnmo_alloc = expnmo, expnyr_alloc = expnyr)
expd_mo_alloc <- expd_gp %>%
group_by(newid, ucc_group, expnmo, expnyr) %>%
summarise(cost_mo = sum(cost, na.rm = T)) %>%
merge(expd_max[, c("newid", "expnmo_alloc", "expnyr_alloc")], by = c("newid"), all.x = T) %>%
select(-c(expnmo, expnyr)) %>%
group_by(newid, ucc_group, expnmo_alloc, expnyr_alloc) %>%
summarise(cost = sum(cost_mo, na.rm = T))
rm(expd_mo, expd_max)
### Calculate the expenditure share
# drop hh with expenditure share == 1
expd_cu <- expd_mo_alloc %>%
group_by(newid) %>%
summarise(cost_tot = sum(cost, na.rm = T)) %>%
merge(expd_mo_alloc, by = "newid", all.y = T) %>%
mutate(expn_share = cost/cost_tot) %>%
filter(expn_share != 1)
cu_exp_share <- expd_cu %>%
# mutate(group_renamed = case_when(
#   ucc_group == "Cereals and cecreal products" ~ "cereals",
#   ucc_group == "Bakery products" ~ "bakery",
#   ucc_group == "Beef and veal" ~ "beef",
#   ucc_group == "Pork" ~ "pork",
#   ucc_group == "Other meats" ~ "other_meats",
#   ucc_group == "Poultry" ~ "poultry",
#   ucc_group == "Fish and seafood" ~ "fish",
#   ucc_group == "Eggs" ~ "eggs",
#   ucc_group == "Dairy and related products" ~ "dairy",
#   ucc_group == "Fresh fruits" ~ "fresh_fruits",
#   ucc_group == "Fresh vegetables" ~ "fresh_veggies",
#   ucc_group == "Processed fruits and vegetables" ~ "processed_fv",
#   ucc_group == "Sugar and sweets" ~ "sugar",
#   ucc_group == "Fat and oil" ~ "fat",
#   ucc_group == "Juices and nonalchoholic drinks" ~ "juices",
#   ucc_group == "Beverage materials including coffee and tea" ~ "coffee_tea",
#   ucc_group == "Other foods" ~ "other_foods",
#   ucc_group == "FAFH" ~ "fafh",
#   ucc_group == "Alcoholic beverages at home" ~ "alc_ah",
#   ucc_group == "Alcoholic beverages away from home" ~ "alc_afh",
#   ucc_group =="Nonfood" ~ "nonfood"
# )) %>%
select(newid, ucc_group, expnmo_alloc, expnyr_alloc, expn_share) %>%
pivot_wider(
names_from = "ucc_group",
values_from = "expn_share"
)
cu_exp_share <- expd_cu %>%
# mutate(group_renamed = case_when(
#   ucc_group == "Cereals and cecreal products" ~ "cereals",
#   ucc_group == "Bakery products" ~ "bakery",
#   ucc_group == "Beef and veal" ~ "beef",
#   ucc_group == "Pork" ~ "pork",
#   ucc_group == "Other meats" ~ "other_meats",
#   ucc_group == "Poultry" ~ "poultry",
#   ucc_group == "Fish and seafood" ~ "fish",
#   ucc_group == "Eggs" ~ "eggs",
#   ucc_group == "Dairy and related products" ~ "dairy",
#   ucc_group == "Fresh fruits" ~ "fresh_fruits",
#   ucc_group == "Fresh vegetables" ~ "fresh_veggies",
#   ucc_group == "Processed fruits and vegetables" ~ "processed_fv",
#   ucc_group == "Sugar and sweets" ~ "sugar",
#   ucc_group == "Fat and oil" ~ "fat",
#   ucc_group == "Juices and nonalchoholic drinks" ~ "juices",
#   ucc_group == "Beverage materials including coffee and tea" ~ "coffee_tea",
#   ucc_group == "Other foods" ~ "other_foods",
#   ucc_group == "FAFH" ~ "fafh",
#   ucc_group == "Alcoholic beverages at home" ~ "alc_ah",
#   ucc_group == "Alcoholic beverages away from home" ~ "alc_afh",
#   ucc_group =="Nonfood" ~ "nonfood"
# )) %>%
select(newid, ucc_group, expnmo_alloc, expnyr_alloc, expn_share) %>%
pivot_wider(
names_from = "ucc_group",
values_from = "expn_share"
) %>%
mutate(across("Bakery products":"Alcoholic beverages at home", ~replace(., is.na(.), 0)))
################################################################################
##### 1. Import price data
################################################################################
### National CPI, by product
# Available area code: US city average; Size A; Size B/C
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
) %>%
mutate(
ucc_group = case_when(
str_trim(item_code) == "SEFA" ~ "cereals",
str_trim(item_code) == "SEFB" ~ "Bakery products",
str_trim(item_code) == "SEFC" ~ "Beef and veal",
str_trim(item_code) == "SEFD" ~ "Pork",
str_trim(item_code) == "SEFE" ~ "Other meats",
str_trim(item_code) == "SEFF" ~ "Poultry",
str_trim(item_code) == "SEFG" ~ "Fish and seafood",
str_trim(item_code) == "SEFH" ~ "Eggs",
str_trim(item_code) == "SEFJ" ~ "Dairy and related products",
str_trim(item_code) == "SEFK" ~ "Fresh fruits",
str_trim(item_code) == "SEFL" ~ "Fresh vegetables",
str_trim(item_code) == "SEFM" ~ "Processed fruits and vegetables",
str_trim(item_code) == "SEFR" ~ "Sugar and sweets",
str_trim(item_code) == "SEFS" ~ "Fat and Oil",
str_trim(item_code) == "SEFN" ~ "Juices and nonalchoholic drinks",
str_trim(item_code) == "SEFP" ~ "Beverage materials including coffee and tea",
str_trim(item_code) == "SEFT" ~ "Other foods",
str_trim(item_code) == "SEFV" ~ "FAFH",
str_trim(item_code) == "SEFW" ~ "Alcoholic beverages at home",
str_trim(item_code) == "SEFX" ~ "Alcoholic beverages away from home",
str_trim(item_code) == "SA0L1" ~ "Nonfood", # All items less food
TRUE ~ "Delete"
)
)%>%
filter(ucc_group != "Delete" & year %in% c(2010:2022)) %>%
mutate(month = gsub("M", "", period) %>% as.numeric())
summary(cpi_natl)
summary(as.factor(cpi_natl$period))
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
) %>%
mutate(
ucc_group = case_when(
str_trim(item_code) == "SEFA" ~ "cereals",
str_trim(item_code) == "SEFB" ~ "Bakery products",
str_trim(item_code) == "SEFC" ~ "Beef and veal",
str_trim(item_code) == "SEFD" ~ "Pork",
str_trim(item_code) == "SEFE" ~ "Other meats",
str_trim(item_code) == "SEFF" ~ "Poultry",
str_trim(item_code) == "SEFG" ~ "Fish and seafood",
str_trim(item_code) == "SEFH" ~ "Eggs",
str_trim(item_code) == "SEFJ" ~ "Dairy and related products",
str_trim(item_code) == "SEFK" ~ "Fresh fruits",
str_trim(item_code) == "SEFL" ~ "Fresh vegetables",
str_trim(item_code) == "SEFM" ~ "Processed fruits and vegetables",
str_trim(item_code) == "SEFR" ~ "Sugar and sweets",
str_trim(item_code) == "SEFS" ~ "Fat and Oil",
str_trim(item_code) == "SEFN" ~ "Juices and nonalchoholic drinks",
str_trim(item_code) == "SEFP" ~ "Beverage materials including coffee and tea",
str_trim(item_code) == "SEFT" ~ "Other foods",
str_trim(item_code) == "SEFV" ~ "FAFH",
str_trim(item_code) == "SEFW" ~ "Alcoholic beverages at home",
str_trim(item_code) == "SEFX" ~ "Alcoholic beverages away from home",
str_trim(item_code) == "SA0L1" ~ "Nonfood", # All items less food
TRUE ~ "Delete"
)
)%>%
filter(ucc_group != "Delete" & year %in% c(2010:2022) & !(period %in% ("M13", "S01", "S02", "S03")) ) %>%
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
) %>%
mutate(
ucc_group = case_when(
str_trim(item_code) == "SEFA" ~ "cereals",
str_trim(item_code) == "SEFB" ~ "Bakery products",
str_trim(item_code) == "SEFC" ~ "Beef and veal",
str_trim(item_code) == "SEFD" ~ "Pork",
str_trim(item_code) == "SEFE" ~ "Other meats",
str_trim(item_code) == "SEFF" ~ "Poultry",
str_trim(item_code) == "SEFG" ~ "Fish and seafood",
str_trim(item_code) == "SEFH" ~ "Eggs",
str_trim(item_code) == "SEFJ" ~ "Dairy and related products",
str_trim(item_code) == "SEFK" ~ "Fresh fruits",
str_trim(item_code) == "SEFL" ~ "Fresh vegetables",
str_trim(item_code) == "SEFM" ~ "Processed fruits and vegetables",
str_trim(item_code) == "SEFR" ~ "Sugar and sweets",
str_trim(item_code) == "SEFS" ~ "Fat and Oil",
str_trim(item_code) == "SEFN" ~ "Juices and nonalchoholic drinks",
str_trim(item_code) == "SEFP" ~ "Beverage materials including coffee and tea",
str_trim(item_code) == "SEFT" ~ "Other foods",
str_trim(item_code) == "SEFV" ~ "FAFH",
str_trim(item_code) == "SEFW" ~ "Alcoholic beverages at home",
str_trim(item_code) == "SEFX" ~ "Alcoholic beverages away from home",
str_trim(item_code) == "SA0L1" ~ "Nonfood", # All items less food
TRUE ~ "Delete"
)
)%>%
filter(ucc_group != "Delete" & year %in% c(2010:2022) & !(period %in% c("M13", "S01", "S02", "S03")) ) %>%
mutate(month = gsub("M", "", period) %>% as.numeric())
summary(as.factor(cpi_natl$month))
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
) %>%
mutate(
ucc_group = case_when(
str_trim(item_code) == "SEFA" ~ "cereals",
str_trim(item_code) == "SEFB" ~ "Bakery products",
str_trim(item_code) == "SEFC" ~ "Beef and veal",
str_trim(item_code) == "SEFD" ~ "Pork",
str_trim(item_code) == "SEFE" ~ "Other meats",
str_trim(item_code) == "SEFF" ~ "Poultry",
str_trim(item_code) == "SEFG" ~ "Fish and seafood",
str_trim(item_code) == "SEFH" ~ "Eggs",
str_trim(item_code) == "SEFJ" ~ "Dairy and related products",
str_trim(item_code) == "SEFK" ~ "Fresh fruits",
str_trim(item_code) == "SEFL" ~ "Fresh vegetables",
str_trim(item_code) == "SEFM" ~ "Processed fruits and vegetables",
str_trim(item_code) == "SEFR" ~ "Sugar and sweets",
str_trim(item_code) == "SEFS" ~ "Fat and Oil",
str_trim(item_code) == "SEFN" ~ "Juices and nonalchoholic drinks",
str_trim(item_code) == "SEFP" ~ "Beverage materials including coffee and tea",
str_trim(item_code) == "SEFT" ~ "Other foods",
str_trim(item_code) == "SEFV" ~ "FAFH",
str_trim(item_code) == "SEFW" ~ "Alcoholic beverages at home",
str_trim(item_code) == "SEFX" ~ "Alcoholic beverages away from home",
str_trim(item_code) == "SA0L1" ~ "Nonfood", # All items less food
TRUE ~ "Delete"
)
)%>%
filter(ucc_group != "Delete" & year %in% c(2010:2022) & !(period %in% c("M13", "S01", "S02", "S03")) ) %>%
mutate(month = gsub("M", "", period) %>% as.numeric(), year = year %>% as.numeric())
expd_cu <- expd_mo_alloc %>%
group_by(newid) %>%
summarise(cost_tot = sum(cost, na.rm = T)) %>%
merge(expd_mo_alloc, by = "newid", all.y = T) %>%
mutate(expn_share = cost/cost_tot) %>%
filter(expn_share != 1) %>%
rename(month = expnmo_alloc, year = expnyr_alloc) %>%
merge(cpi_natl[,c("month", "year", "ucc_group", "value")], by = c("month", "year", "ucc_group")) %>%
rename(price = value)
expd_cu <- expd_mo_alloc %>%
group_by(newid) %>%
summarise(cost_tot = sum(cost, na.rm = T)) %>%
merge(expd_mo_alloc, by = "newid", all.y = T) %>%
mutate(expn_share = cost/cost_tot) %>%
filter(expn_share != 1) %>%
rename(month = expnmo_alloc, year = expnyr_alloc) %>%
merge(cpi_natl[,c("month", "year", "ucc_group", "value")], by = c("month", "year", "ucc_group"), all.x = T) %>%
rename(price = value)
summary(as.factor(cpi_natl$ucc_group))
summary(as.factor(expd_cu$ucc_group))
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
) %>%
mutate(
ucc_group = case_when(
str_trim(item_code) == "SEFA" ~ "Cereals and cecreal products",
str_trim(item_code) == "SEFB" ~ "Bakery products",
str_trim(item_code) == "SEFC" ~ "Beef and veal",
str_trim(item_code) == "SEFD" ~ "Pork",
str_trim(item_code) == "SEFE" ~ "Other meats",
str_trim(item_code) == "SEFF" ~ "Poultry",
str_trim(item_code) == "SEFG" ~ "Fish and seafood",
str_trim(item_code) == "SEFH" ~ "Eggs",
str_trim(item_code) == "SEFJ" ~ "Dairy and related products",
str_trim(item_code) == "SEFK" ~ "Fresh fruits",
str_trim(item_code) == "SEFL" ~ "Fresh vegetables",
str_trim(item_code) == "SEFM" ~ "Processed fruits and vegetables",
str_trim(item_code) == "SEFR" ~ "Sugar and sweets",
str_trim(item_code) == "SEFS" ~ "Fat and oil",
str_trim(item_code) == "SEFN" ~ "Juices and nonalchoholic drinks",
str_trim(item_code) == "SEFP" ~ "Beverage materials including coffee and tea",
str_trim(item_code) == "SEFT" ~ "Other foods",
str_trim(item_code) == "SEFV" ~ "FAFH",
str_trim(item_code) == "SEFW" ~ "Alcoholic beverages at home",
str_trim(item_code) == "SEFX" ~ "Alcoholic beverages away from home",
str_trim(item_code) == "SA0L1" ~ "Nonfood", # All items less food
TRUE ~ "Delete"
)
)%>%
filter(ucc_group != "Delete" & year %in% c(2010:2022) & !(period %in% c("M13", "S01", "S02", "S03")) ) %>%
mutate(month = gsub("M", "", period) %>% as.numeric(), year = year %>% as.numeric())
expd_cu <- expd_mo_alloc %>%
group_by(newid) %>%
summarise(cost_tot = sum(cost, na.rm = T)) %>%
merge(expd_mo_alloc, by = "newid", all.y = T) %>%
mutate(expn_share = cost/cost_tot) %>%
filter(expn_share != 1) %>%
rename(month = expnmo_alloc, year = expnyr_alloc) %>%
merge(cpi_natl[,c("month", "year", "ucc_group", "value")], by = c("month", "year", "ucc_group"), all.x = T) %>%
rename(price = value)
summary(expd\$price)
summary(expd_cu$price)
summary(expd_cu)
test <- expd_cu %>% filter(is.na(price))
View(test)
summary(as.factor(test$ucc_group))
summary(as.factor(test$year))
summary(as.factor(test$month))
expd_cu <- expd_mo_alloc %>%
group_by(newid) %>%
summarise(cost_tot = sum(cost, na.rm = T)) %>%
merge(expd_mo_alloc, by = "newid", all.y = T) %>%
mutate(expn_share = cost/cost_tot) %>%
filter(expn_share != 1) %>%
rename(month = expnmo_alloc, year = expnyr_alloc)
summary(expd_cu)
summary(cpi_natl)
summary(as.factor(expd_cu$ucc_group))
summary(as.factor(cpi_natl$ucc_group))
summary(as.factor(cpi_natl$item_code))
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
)
summary(as.factor(cpi_natl$item_code))
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
) %>%
mutate(
ucc_group = case_when(
str_trim(item_code) == "SEFA" ~ "Cereals and cecreal products",
str_trim(item_code) == "SEFB" ~ "Bakery products",
str_trim(item_code) == "SEFC" ~ "Beef and veal",
str_trim(item_code) == "SEFD" ~ "Pork",
str_trim(item_code) == "SEFE" ~ "Other meats",
str_trim(item_code) == "SEFF" ~ "Poultry",
str_trim(item_code) == "SEFG" ~ "Fish and seafood",
str_trim(item_code) == "SEFH" ~ "Eggs",
str_trim(item_code) == "SEFJ" ~ "Dairy and related products",
str_trim(item_code) == "SEFK" ~ "Fresh fruits",
str_trim(item_code) == "SEFL" ~ "Fresh vegetables",
str_trim(item_code) == "SEFM" ~ "Processed fruits and vegetables",
str_trim(item_code) == "SEFR" ~ "Sugar and sweets",
str_trim(item_code) == "SEFS" ~ "Fat and oil",
str_trim(item_code) == "SEFN" ~ "Juices and nonalchoholic drinks",
str_trim(item_code) == "SEFP" ~ "Beverage materials including coffee and tea",
str_trim(item_code) == "SEFT" ~ "Other foods",
str_trim(item_code) == "SEFV" ~ "FAFH",
str_trim(item_code) == "SEFW" ~ "Alcoholic beverages at home",
str_trim(item_code) == "SEFX" ~ "Alcoholic beverages away from home",
str_trim(item_code) == "SAOL1" ~ "Nonfood", # All items less food
TRUE ~ "Delete"
)
)%>%
filter(ucc_group != "Delete" & year %in% c(2010:2022) & !(period %in% c("M13", "S01", "S02", "S03")) ) %>%
mutate(month = gsub("M", "", period) %>% as.numeric(), year = year %>% as.numeric())
summary(as.factor(cpi_natl$item_code))
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
) %>%
mutate(
ucc_group = case_when(
str_trim(item_code) == "SEFA" ~ "Cereals and cecreal products",
str_trim(item_code) == "SEFB" ~ "Bakery products",
str_trim(item_code) == "SEFC" ~ "Beef and veal",
str_trim(item_code) == "SEFD" ~ "Pork",
str_trim(item_code) == "SEFE" ~ "Other meats",
str_trim(item_code) == "SEFF" ~ "Poultry",
str_trim(item_code) == "SEFG" ~ "Fish and seafood",
str_trim(item_code) == "SEFH" ~ "Eggs",
str_trim(item_code) == "SEFJ" ~ "Dairy and related products",
str_trim(item_code) == "SEFK" ~ "Fresh fruits",
str_trim(item_code) == "SEFL" ~ "Fresh vegetables",
str_trim(item_code) == "SEFM" ~ "Processed fruits and vegetables",
str_trim(item_code) == "SEFR" ~ "Sugar and sweets",
str_trim(item_code) == "SEFS" ~ "Fat and oil",
str_trim(item_code) == "SEFN" ~ "Juices and nonalchoholic drinks",
str_trim(item_code) == "SEFP" ~ "Beverage materials including coffee and tea",
str_trim(item_code) == "SEFT" ~ "Other foods",
str_trim(item_code) == "SEFV" ~ "FAFH",
str_trim(item_code) == "SEFW" ~ "Alcoholic beverages at home",
str_trim(item_code) == "SEFX" ~ "Alcoholic beverages away from home",
str_trim(item_code) == "SA0L1" ~ "Nonfood", # All items less food
TRUE ~ "Delete"
)
)%>%
filter(ucc_group != "Delete" & year %in% c(2010:2022) & !(period %in% c("M13", "S01", "S02", "S03")) ) %>%
mutate(month = gsub("M", "", period) %>% as.numeric(), year = year %>% as.numeric())
summary(as.factor(cpi_natl$item_code))
cpi_natl <- read.delim("bls_price_data/cu.data.11.USFoodBeverage.txt") %>%
mutate(unadj = ifelse(substr(series_id, 3, 3) == "U", 1, 0),
monthly = ifelse(substr(series_id, 4, 4) == "R", 1, 0),
area_code = substr(series_id, 5, 8),
base82_84 = ifelse(substr(series_id, 9, 9) == "S", 1, 0),
item_code = substr(series_id, 9, 16)
)
"SEFT" %in% cpi_natl$item_code
"SEFT" %in% str_trim(cpi_natl$item_code)
"SA0L1" %in% str_trim(cpi_natl$item_code)
install.packages("HonestDiD")
devtools::install_github('asheshrambachan/HonestDiD')
# Install remotes package if not installed
install.packages("remotes")
# Turn off warning-error-conversion, because the tiniest warning stops installation
Sys.setenv("R_REMOTES_NO_ERRORS_FROM_WARNINGS" = "true")
# install from github
remotes::install_github("asheshrambachan/HonestDiD")
